{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3917,"sourceType":"datasetVersion","datasetId":2319}],"dockerImageVersionId":30775,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-27T21:26:38.642381Z","iopub.execute_input":"2024-09-27T21:26:38.642872Z","iopub.status.idle":"2024-09-27T21:26:40.020587Z","shell.execute_reply.started":"2024-09-27T21:26:38.642829Z","shell.execute_reply":"2024-09-27T21:26:40.019173Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/eergy-efficiency-dataset/ENB2012_data.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/eergy-efficiency-dataset/ENB2012_data.csv')\npd.set_option('max_colwidth', 100)\ndf.head(5)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T21:26:40.023231Z","iopub.execute_input":"2024-09-27T21:26:40.024368Z","iopub.status.idle":"2024-09-27T21:26:40.077239Z","shell.execute_reply.started":"2024-09-27T21:26:40.024293Z","shell.execute_reply":"2024-09-27T21:26:40.075908Z"},"trusted":true},"execution_count":2,"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"     X1     X2     X3      X4   X5  X6   X7  X8     Y1     Y2\n0  0.98  514.5  294.0  110.25  7.0   2  0.0   0  15.55  21.33\n1  0.98  514.5  294.0  110.25  7.0   3  0.0   0  15.55  21.33\n2  0.98  514.5  294.0  110.25  7.0   4  0.0   0  15.55  21.33\n3  0.98  514.5  294.0  110.25  7.0   5  0.0   0  15.55  21.33\n4  0.90  563.5  318.5  122.50  7.0   2  0.0   0  20.84  28.28","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>X1</th>\n      <th>X2</th>\n      <th>X3</th>\n      <th>X4</th>\n      <th>X5</th>\n      <th>X6</th>\n      <th>X7</th>\n      <th>X8</th>\n      <th>Y1</th>\n      <th>Y2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.98</td>\n      <td>514.5</td>\n      <td>294.0</td>\n      <td>110.25</td>\n      <td>7.0</td>\n      <td>2</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>15.55</td>\n      <td>21.33</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.98</td>\n      <td>514.5</td>\n      <td>294.0</td>\n      <td>110.25</td>\n      <td>7.0</td>\n      <td>3</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>15.55</td>\n      <td>21.33</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.98</td>\n      <td>514.5</td>\n      <td>294.0</td>\n      <td>110.25</td>\n      <td>7.0</td>\n      <td>4</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>15.55</td>\n      <td>21.33</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.98</td>\n      <td>514.5</td>\n      <td>294.0</td>\n      <td>110.25</td>\n      <td>7.0</td>\n      <td>5</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>15.55</td>\n      <td>21.33</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.90</td>\n      <td>563.5</td>\n      <td>318.5</td>\n      <td>122.50</td>\n      <td>7.0</td>\n      <td>2</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>20.84</td>\n      <td>28.28</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"def check_df(dataframe, head=5):\n    print(\"##################### Shape #####################\")\n    print(dataframe.shape)\n    print(\"##################### Types #####################\")\n    print(dataframe.dtypes)\n    print(\"##################### Head #####################\")\n    print(dataframe.head(head))\n    print(\"##################### Tail #####################\")\n    print(dataframe.tail(head))\n    print(\"##################### NA #####################\")\n    print(dataframe.isnull().sum())\n    print(\"##################### Quantiles #####################\")\n    print(dataframe.describe([0, 0.05, 0.50, 0.95, 0.99, 1]).T)\n\n\ncheck_df(df)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T21:26:43.873681Z","iopub.execute_input":"2024-09-27T21:26:43.874105Z","iopub.status.idle":"2024-09-27T21:26:43.942996Z","shell.execute_reply.started":"2024-09-27T21:26:43.874063Z","shell.execute_reply":"2024-09-27T21:26:43.941751Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"##################### Shape #####################\n(768, 10)\n##################### Types #####################\nX1    float64\nX2    float64\nX3    float64\nX4    float64\nX5    float64\nX6      int64\nX7    float64\nX8      int64\nY1    float64\nY2    float64\ndtype: object\n##################### Head #####################\n     X1     X2     X3      X4   X5  X6   X7  X8     Y1     Y2\n0  0.98  514.5  294.0  110.25  7.0   2  0.0   0  15.55  21.33\n1  0.98  514.5  294.0  110.25  7.0   3  0.0   0  15.55  21.33\n2  0.98  514.5  294.0  110.25  7.0   4  0.0   0  15.55  21.33\n3  0.98  514.5  294.0  110.25  7.0   5  0.0   0  15.55  21.33\n4  0.90  563.5  318.5  122.50  7.0   2  0.0   0  20.84  28.28\n##################### Tail #####################\n       X1     X2     X3     X4   X5  X6   X7  X8     Y1     Y2\n763  0.64  784.0  343.0  220.5  3.5   5  0.4   5  17.88  21.40\n764  0.62  808.5  367.5  220.5  3.5   2  0.4   5  16.54  16.88\n765  0.62  808.5  367.5  220.5  3.5   3  0.4   5  16.44  17.11\n766  0.62  808.5  367.5  220.5  3.5   4  0.4   5  16.48  16.61\n767  0.62  808.5  367.5  220.5  3.5   5  0.4   5  16.64  16.03\n##################### NA #####################\nX1    0\nX2    0\nX3    0\nX4    0\nX5    0\nX6    0\nX7    0\nX8    0\nY1    0\nY2    0\ndtype: int64\n##################### Quantiles #####################\n    count        mean        std     min      0%        5%     50%      95%  \\\nX1  768.0    0.764167   0.105777    0.62    0.62    0.6200    0.75    0.980   \nX2  768.0  671.708333  88.086116  514.50  514.50  514.5000  673.75  808.500   \nX3  768.0  318.500000  43.626481  245.00  245.00  245.0000  318.50  416.500   \nX4  768.0  176.604167  45.165950  110.25  110.25  110.2500  183.75  220.500   \nX5  768.0    5.250000   1.751140    3.50    3.50    3.5000    5.25    7.000   \nX6  768.0    3.500000   1.118763    2.00    2.00    2.0000    3.50    5.000   \nX7  768.0    0.234375   0.133221    0.00    0.00    0.0000    0.25    0.400   \nX8  768.0    2.812500   1.550960    0.00    0.00    0.0000    3.00    5.000   \nY1  768.0   22.307201  10.090196    6.01    6.01   10.4635   18.95   39.860   \nY2  768.0   24.587760   9.513306   10.90   10.90   13.6175   22.08   40.037   \n\n         99%    100%     max  \nX1    0.9800    0.98    0.98  \nX2  808.5000  808.50  808.50  \nX3  416.5000  416.50  416.50  \nX4  220.5000  220.50  220.50  \nX5    7.0000    7.00    7.00  \nX6    5.0000    5.00    5.00  \nX7    0.4000    0.40    0.40  \nX8    5.0000    5.00    5.00  \nY1   42.0899   43.10   43.10  \nY2   45.5431   48.03   48.03  \n","output_type":"stream"}]},{"cell_type":"code","source":"import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error, r2_score\n\nimport warnings\nwarnings.filterwarnings('ignore')","metadata":{"execution":{"iopub.status.busy":"2024-09-27T21:34:25.478903Z","iopub.execute_input":"2024-09-27T21:34:25.479348Z","iopub.status.idle":"2024-09-27T21:34:26.562818Z","shell.execute_reply.started":"2024-09-27T21:34:25.479309Z","shell.execute_reply":"2024-09-27T21:34:26.561584Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"X = df.drop(['Y1', 'Y2'], axis=1)  \ny1 = df['Y1']  # Isıtma yükü (Y1)\ny2 = df['Y2']  # Soğutma yükü (Y2)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T21:35:31.764327Z","iopub.execute_input":"2024-09-27T21:35:31.764992Z","iopub.status.idle":"2024-09-27T21:35:31.776904Z","shell.execute_reply.started":"2024-09-27T21:35:31.764932Z","shell.execute_reply":"2024-09-27T21:35:31.775587Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"X_train, X_test, y1_train, y1_test = train_test_split(X, y1, test_size=0.2, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T21:35:45.238590Z","iopub.execute_input":"2024-09-27T21:35:45.239063Z","iopub.status.idle":"2024-09-27T21:35:45.250452Z","shell.execute_reply.started":"2024-09-27T21:35:45.239019Z","shell.execute_reply":"2024-09-27T21:35:45.249214Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"rf_model = RandomForestRegressor(random_state=42)\nrf_model.fit(X_train, y1_train)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T21:35:58.014404Z","iopub.execute_input":"2024-09-27T21:35:58.014866Z","iopub.status.idle":"2024-09-27T21:35:58.313984Z","shell.execute_reply.started":"2024-09-27T21:35:58.014821Z","shell.execute_reply":"2024-09-27T21:35:58.312681Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"RandomForestRegressor(random_state=42)","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"y1_pred = rf_model.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T21:36:10.427690Z","iopub.execute_input":"2024-09-27T21:36:10.428155Z","iopub.status.idle":"2024-09-27T21:36:10.446234Z","shell.execute_reply.started":"2024-09-27T21:36:10.428111Z","shell.execute_reply":"2024-09-27T21:36:10.444688Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"mse = mean_squared_error(y1_test, y1_pred)\nr2 = r2_score(y1_test, y1_pred)\nmodel_score = rf_model.score(X_test, y1_test)\n\nprint(f\"Mean Squared Error (Isıtma Yükü): {mse}\")\nprint(f\"R^2 Score (Isıtma Yükü): {r2}\")\nprint(f\"Model Score (Isıtma Yükü): {model_score}\")","metadata":{"execution":{"iopub.status.busy":"2024-09-27T21:52:47.326314Z","iopub.execute_input":"2024-09-27T21:52:47.327440Z","iopub.status.idle":"2024-09-27T21:52:47.347914Z","shell.execute_reply.started":"2024-09-27T21:52:47.327388Z","shell.execute_reply":"2024-09-27T21:52:47.346439Z"},"trusted":true},"execution_count":22,"outputs":[{"name":"stdout","text":"Mean Squared Error (Isıtma Yükü): 0.24088222909090704\nR^2 Score (Isıtma Yükü): 0.9976889700896121\nModel Score (Isıtma Yükü): 0.9276824499262717\n","output_type":"stream"}]},{"cell_type":"code","source":"# Aynı işlemleri soğutma yükü (Y2) için yapma\n\nX_train, X_test, y2_train, y2_test = train_test_split(X, y2, test_size=0.2, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T21:37:54.204313Z","iopub.execute_input":"2024-09-27T21:37:54.204733Z","iopub.status.idle":"2024-09-27T21:37:54.213328Z","shell.execute_reply.started":"2024-09-27T21:37:54.204694Z","shell.execute_reply":"2024-09-27T21:37:54.212169Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"code","source":"rf_model.fit(X_train, y2_train)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T21:38:40.165760Z","iopub.execute_input":"2024-09-27T21:38:40.167080Z","iopub.status.idle":"2024-09-27T21:38:40.460139Z","shell.execute_reply.started":"2024-09-27T21:38:40.167021Z","shell.execute_reply":"2024-09-27T21:38:40.458895Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"RandomForestRegressor(random_state=42)","text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"y2_pred = rf_model.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-09-27T21:38:48.352932Z","iopub.execute_input":"2024-09-27T21:38:48.353417Z","iopub.status.idle":"2024-09-27T21:38:48.371162Z","shell.execute_reply.started":"2024-09-27T21:38:48.353370Z","shell.execute_reply":"2024-09-27T21:38:48.369445Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"mse2 = mean_squared_error(y2_test, y2_pred)\nr2_2 = r2_score(y2_test, y2_pred)\nmodel_score = rf_model.score(X_test, y2_test)\n\nprint(f\"Mean Squared Error (Soğutma Yükü): {mse2}\")\nprint(f\"R^2 Score (Soğutma Yükü): {r2_2}\")\nprint(f\"Model Score (Soğutma Yükü): {model_score}\")","metadata":{"execution":{"iopub.status.busy":"2024-09-27T21:52:32.988574Z","iopub.execute_input":"2024-09-27T21:52:32.989073Z","iopub.status.idle":"2024-09-27T21:52:33.011556Z","shell.execute_reply.started":"2024-09-27T21:52:32.989029Z","shell.execute_reply":"2024-09-27T21:52:33.010199Z"},"trusted":true},"execution_count":21,"outputs":[{"name":"stdout","text":"Mean Squared Error (Soğutma Yükü): 2.9340964745454556\nR^2 Score (Soğutma Yükü): 0.9683338660414131\nModel Score (Soğutma Yükü): 0.9683338660414131\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}